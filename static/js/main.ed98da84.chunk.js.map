{"version":3,"sources":["util/options.js","components/Form/Progress.jsx","components/Form/index.jsx","util/schema/formSchema.js","hooks/Form.js","util/theme.js","components/Header/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["genderOptions","value","label","recommendationOptions","useStyles","makeStyles","theme","margin","marginBottom","spacing","Progress","progress","classes","className","Typography","variant","LinearProgress","Index","onSubmit","register","errors","control","setValue","values","recommendation","dob","console","log","Grid","container","direction","TextField","id","name","inputRef","error","Boolean","fname","helperText","message","lname","FormControl","as","utils","MomentUtils","disableFuture","autoOk","openTo","format","views","maxDateMessage","onChange","e","Tooltip","arrow","title","aria-label","email","address","multiline","phone","InputLabel","Select","map","ele","MenuItem","key","multiple","renderValue","selected","Chip","Checkbox","checked","indexOf","Button","type","size","color","disabled","schema","yup","shape","required","max","Date","gender","of","min","Form","defaultValues","useForm","mode","resolver","yupResolver","validationSchema","handleSubmit","watch","reset","keys","Object","completed","total","length","i","isItCompleted","Math","ceil","getProgress","data","createMuiTheme","palette","padding","Header","AppBar","position","paddingTop","App","ThemeProvider","Container","maxWidth","window","location","hostname","match","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ed98da84.chunk.js","sourcesContent":["export const genderOptions = [\n  { value: 'Female', label: 'Female' },\n  { value: 'Male', label: 'Male' },\n  { value: 'Others', label: 'Others' }\n]\n\nexport const recommendationOptions = [\n  { value: 'Insurance', label: 'Insurance' },\n  { value: 'Superannuation', label: 'Superannuation' },\n  { value: 'Investments', label: 'Investments' },\n  { value: 'Cashflow', label: 'Cashflow' },\n  { value: 'Pension', label: 'Pension' },\n  { value: 'Estate Planning', label: 'Estate Planning' }\n]","import React from 'react'\nimport { LinearProgress, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    marginBottom: theme.spacing(4)\n  }\n}))\n\nfunction Progress ({ progress }) {\n  const classes = useStyles()\n  return (\n    <div className={classes.margin}>\n      <Typography variant='h6'>Progress: {progress}%</Typography>\n      <LinearProgress variant='determinate' value={progress} />\n    </div>\n  )\n}\n\nexport default Progress\n","import React from 'react'\nimport {\n  TextField,\n  Grid,\n  Button,\n  makeStyles,\n  Select,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Checkbox,\n  Chip,\n  Tooltip\n} from '@material-ui/core'\nimport { Controller } from 'react-hook-form'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers'\nimport MomentUtils from '@date-io/moment'\nimport { genderOptions, recommendationOptions } from '../../util/options'\nimport Progress from './Progress'\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    marginBottom: theme.spacing(3)\n  }\n}))\n\nfunction Index ({\n  onSubmit,\n  register,\n  errors,\n  control,\n  setValue,\n  progress,\n  values: { recommendation, dob }\n}) {\n  const classes = useStyles()\n  console.log('tcl', errors, progress)\n  return (\n    <>\n      <Progress progress={progress} />\n      <form onSubmit={onSubmit}>\n        <Grid container direction='column'>\n          <TextField\n            id='1'\n            name='fname'\n            label='First Name'\n            inputRef={register}\n            error={Boolean(errors.fname)}\n            helperText={errors.fname && errors.fname.message}\n            className={classes.margin}\n          />\n\n          <TextField\n            id='2'\n            name='lname'\n            label='Last Name'\n            inputRef={register}\n            error={Boolean(errors.lname)}\n            helperText={errors.lname && errors.lname.message}\n            className={classes.margin}\n          />\n\n          <FormControl className={classes.margin}>\n            <Controller\n              as={\n                <MuiPickersUtilsProvider utils={MomentUtils}>\n                  <KeyboardDatePicker\n                    id='3'\n                    disableFuture\n                    autoOk\n                    openTo='year'\n                    variant='dialogue'\n                    format='yyyy-MM-DD'\n                    label='Date of Birth'\n                    views={['year', 'month', 'date']}\n                    value={dob}\n                    maxDateMessage='Date can not be on Future'\n                    onChange={e => setValue('dob', e)}\n                  />\n                </MuiPickersUtilsProvider>\n              }\n              control={control}\n              name='dob'\n            />\n          </FormControl>\n\n          <Tooltip\n            arrow\n            title='The customers primary contact email address'\n            aria-label='The customers primary contact email address'\n          >\n            <TextField\n              id='4'\n              name='email'\n              label='Email'\n              inputRef={register}\n              error={Boolean(errors.email)}\n              helperText={errors.email && errors.email.message}\n              className={classes.margin}\n            />\n          </Tooltip>\n\n          <Tooltip\n            arrow\n            title='The customers current residential address'\n            aria-label='The customers current residential address'\n          >\n            <TextField\n              id='5'\n              name='address'\n              label='Address'\n              inputRef={register}\n              error={Boolean(errors.address)}\n              helperText={errors.address && errors.address.message}\n              multiline\n              className={classes.margin}\n            />\n          </Tooltip>\n\n          <TextField\n            id='6'\n            name='phone'\n            label='Contact Number'\n            inputRef={register}\n            error={Boolean(errors.phone)}\n            helperText={errors.phone && errors.phone.message}\n            className={classes.margin}\n          />\n\n          <FormControl className={classes.margin}>\n            <InputLabel>Gender</InputLabel>\n            <Controller\n              as={\n                <Select id='7'>\n                  {genderOptions.map(ele => (\n                    <MenuItem key={ele.value} value={ele.value}>\n                      {ele.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              }\n              name='gender'\n              control={control}\n            />\n          </FormControl>\n\n          <Tooltip\n            arrow\n            title='Select all of the areas that you are providing a recommendation for'\n            aria-label='Select all of the areas that you are providing a recommendation for'\n          >\n            <FormControl className={classes.margin}>\n              <InputLabel>Areas of Recommendation</InputLabel>\n              <Controller\n                as={\n                  <Select\n                    id='8'\n                    multiple\n                    renderValue={selected => (\n                      <div>\n                        {selected.map(value => (\n                          <Chip key={value} label={value} />\n                        ))}\n                      </div>\n                    )}\n                  >\n                    {recommendationOptions.map(ele => (\n                      <MenuItem value={ele.value} key={ele.value}>\n                        <Checkbox\n                          checked={recommendation.indexOf(ele.value) !== -1}\n                        />\n                        {ele.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                }\n                name='recommendation'\n                control={control}\n              />\n            </FormControl>\n          </Tooltip>\n\n          <Button\n            type='submit'\n            size='medium'\n            color='primary'\n            variant='contained'\n            disabled={progress !== 100}\n          >\n            Submit\n          </Button>\n        </Grid>\n      </form>\n    </>\n  )\n}\n\nexport default Index\n","import * as yup from \"yup\";\n\nconst schema = yup.object().shape({\n  fname: yup.string().required('First Name is Required'),\n  lname: yup.string().required('Last Name is Required'),\n  dob: yup.date().max(new Date(), 'Date can not be on Future'),\n  email: yup.string().email('Invalid Email Address').required('Email is Required'),\n  address: yup.string().required('Address is Required'),\n  phone: yup.string().required('Contact Number is Required'),\n  gender: yup.string().required('Gender is Required'),\n  recommendation: yup.array().of(yup.string()).min(1, 'Area of Recommendation is Required')\n});\n\nexport default schema;","import React from 'react'\nimport FormComponent from '../components/Form'\nimport { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers'\nimport validationSchema from '../util/schema/formSchema'\n\nfunction Form () {\n  const defaultValues = {\n    fname: '',\n    lname: '',\n    dob: null,\n    email: '',\n    address: '',\n    phone: '',\n    gender: '',\n    recommendation: []\n  }\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors,\n    control,\n    reset,\n    setValue\n  } = useForm({\n    mode: 'onBlur',\n    resolver: yupResolver(validationSchema),\n    defaultValues\n  })\n\n  const getProgress = values => {\n    const keys = Object.keys(values)\n    let completed = 0\n    let total = keys.length\n\n    for (let i in keys) {\n      const key = keys[i]\n      const isItCompleted =\n        values[key] && typeof values[key] === 'object'\n          ? !!Object.keys(values[key]).length\n          : !!values[key]\n      const error = !errors[key];\n      completed += isItCompleted && error\n    }\n\n    return Math.ceil((completed * 100.0) / total)\n  }\n  const onSubmit = data => {\n    console.log('data', data)\n    reset(defaultValues)\n  }\n\n  const values = watch()\n  const progress = getProgress(values)\n\n  return (\n    <FormComponent\n      onSubmit={handleSubmit(onSubmit)}\n      register={register}\n      errors={errors}\n      control={control}\n      values={values}\n      setValue={setValue}\n      progress={progress}\n    />\n  )\n}\n\nexport default Form\n","import { createMuiTheme  } from '@material-ui/core';\n\nexport default createMuiTheme({\n  palette: {\n    type: 'light',\n  },\n})","import React from 'react'\nimport { AppBar, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  padding: {\n    padding: theme.spacing(1)\n  }\n}))\n\nfunction Header () {\n  const classes = useStyles()\n  return (\n    <div>\n      <AppBar position='static' className={classes.padding}>\n        <Typography variant='h6'>NOD</Typography>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react';\nimport Form from './hooks/Form'\nimport { Container, makeStyles, ThemeProvider } from '@material-ui/core'\nimport theme from './util/theme'\nimport Header from './components/Header/Header';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(8),\n  }\n}))\n\nfunction App() {\n  const classes = useStyles()\n  return (\n    <ThemeProvider theme={theme}>\n      <Header />\n      <Container maxWidth=\"md\" className={classes.container}>\n        <Form />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <CssBaseline />\n      <App />\n    </>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}