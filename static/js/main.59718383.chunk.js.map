{"version":3,"sources":["util/options.js","components/Form/Progress.jsx","components/Form/TextInput.jsx","components/Form/DateInput.jsx","components/Form/PhoneInput.jsx","components/Form/SelectInput.jsx","components/Form/index.jsx","util/schema/formSchema.js","hooks/Form.js","util/theme.js","components/Header/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["genderOptions","value","label","recommendationOptions","useStyles","makeStyles","theme","margin","marginBottom","spacing","Progress","progress","classes","className","Typography","variant","LinearProgress","TextInput","register","error","id","name","tooltip","element","TextField","inputRef","Boolean","helperText","message","renderedElement","Tooltip","arrow","title","aria-label","DateInput","setValue","handleError","control","FormControl","as","utils","MomentUtils","disableFuture","autoOk","openTo","format","views","maxDateMessage","onChange","e","onError","PhoneInput","color","render","defaultCountry","FormHelperText","SelectInput","options","multiple","optionRenderer","map","ele","MenuItem","key","Checkbox","checked","indexOf","InputLabel","Select","renderValue","selected","Chip","selectedRendered","noneDisplay","display","Index","onSubmit","errors","handleDateError","handlePhoneNo","values","recommendation","dob","phone","gender","download","csvLinkRef","Grid","container","direction","fname","lname","email","address","Button","type","size","disabled","data","target","filename","separator","ref","schema","yup","shape","required","max","Date","of","min","Form","defaultValues","useForm","mode","resolver","yupResolver","validationSchema","handleSubmit","watch","reset","setError","clearErrors","React","useState","setDownload","useRef","keys","Object","completed","total","length","i","isItCompleted","Math","ceil","getProgress","modifiedData","moment","setTimeout","current","link","click","isValidNumber","err","createMuiTheme","palette","padding","Header","AppBar","position","paddingTop","App","ThemeProvider","Container","maxWidth","window","location","hostname","match","ReactDOM","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.59718383.chunk.js","sourcesContent":["export const genderOptions = [\n  { value: 'Female', label: 'Female' },\n  { value: 'Male', label: 'Male' },\n  { value: 'Others', label: 'Others' }\n]\n\nexport const recommendationOptions = [\n  { value: 'Insurance', label: 'Insurance' },\n  { value: 'Superannuation', label: 'Superannuation' },\n  { value: 'Investments', label: 'Investments' },\n  { value: 'Cashflow', label: 'Cashflow' },\n  { value: 'Pension', label: 'Pension' },\n  { value: 'Estate Planning', label: 'Estate Planning' }\n]","import React from 'react'\nimport { LinearProgress, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    marginBottom: theme.spacing(4)\n  }\n}))\n\nfunction Progress ({ progress }) {\n  const classes = useStyles()\n  return (\n    <div className={classes.margin}>\n      <Typography variant='h6'>Progress: {progress}%</Typography>\n      <LinearProgress variant='determinate' value={progress} />\n    </div>\n  )\n}\n\nexport default Progress\n","import React from 'react'\nimport { TextField, Tooltip } from '@material-ui/core'\n\nfunction TextInput ({\n  register,\n  error,\n  className,\n  id,\n  name,\n  label,\n  tooltip = ''\n}) {\n  const element = (\n    <TextField\n      id={id}\n      name={name}\n      label={label}\n      inputRef={register}\n      error={Boolean(error)}\n      helperText={error && error.message}\n      className={className}\n    />\n  )\n\n  let renderedElement = element\n  if (tooltip) {\n    renderedElement = (\n      <Tooltip arrow title={tooltip} aria-label={tooltip}>\n        {element}\n      </Tooltip>\n    )\n  }\n\n  return renderedElement\n}\n\nexport default TextInput\n","import React from 'react'\nimport { FormControl } from '@material-ui/core'\nimport { Controller } from 'react-hook-form'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers'\nimport MomentUtils from '@date-io/moment'\n\nfunction DateInput ({ className, value, id, setValue, handleError, control }) {\n  return (\n    <FormControl className={className}>\n      <Controller\n        as={\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <KeyboardDatePicker\n              id={id}\n              disableFuture\n              autoOk\n              openTo='year'\n              variant='dialogue'\n              format='yyyy-MM-DD'\n              label='Date of Birth'\n              views={['year', 'month', 'date']}\n              value={value}\n              maxDateMessage='Date can not be on Future'\n              onChange={e => setValue('dob', e)}\n              onError={e => handleError(e)}\n            />\n          </MuiPickersUtilsProvider>\n        }\n        control={control}\n        name='dob'\n      />\n    </FormControl>\n  )\n}\n\nexport default DateInput\n","import React from 'react'\nimport { FormControl, Typography, FormHelperText } from '@material-ui/core'\nimport { Controller } from 'react-hook-form'\nimport MuiPhoneNumber from 'material-ui-phone-number'\n\nfunction PhoneInput ({\n  id,\n  className,\n  label,\n  value,\n  onChange,\n  control,\n  error\n}) {\n  return (\n    <FormControl className={className}>\n      <Typography variant='caption' color='textSecondary'>\n        {label}\n      </Typography>\n      <Controller\n        render={() => (\n          <MuiPhoneNumber\n            id={id}\n            defaultCountry='au'\n            value={value}\n            onChange={e => onChange(e)}\n          />\n        )}\n        name='phone'\n        control={control}\n      />\n      {error && error.message && (\n        <FormHelperText error>{error.message}</FormHelperText>\n      )}\n    </FormControl>\n  )\n}\n\nexport default PhoneInput\n","import React from 'react'\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  FormHelperText,\n  MenuItem,\n  Tooltip,\n  Chip,\n  Checkbox\n} from '@material-ui/core'\nimport { Controller } from 'react-hook-form'\n\nfunction SelectInput ({\n  id,\n  name,\n  className,\n  label,\n  error,\n  control,\n  options = [],\n  value,\n  multiple = false,\n  tooltip = ''\n}) {\n  const selectedRendered = (selected, multiple) => {\n    return multiple ? (\n      <div>\n        {selected.map(value => (\n          <Chip key={value} label={value} />\n        ))}\n      </div>\n    ) : (\n      <div>{selected}</div>\n    )\n  }\n\n  const optionRenderer = options.map(ele => (\n    <MenuItem key={ele.value} value={ele.value}>\n      {multiple && <Checkbox checked={value.indexOf(ele.value) !== -1} />}\n      {ele.label}\n    </MenuItem>\n  ))\n\n  const element = (\n    <FormControl className={className}>\n      <InputLabel>{label}</InputLabel>\n      <Controller\n        as={\n          <Select\n            id={id}\n            error={Boolean(error)}\n            multiple={multiple}\n            renderValue={selected => selectedRendered(selected, multiple)}\n          >\n            {optionRenderer}\n          </Select>\n        }\n        name={name}\n        control={control}\n      />\n      {error && error.message && (\n        <FormHelperText error>{error.message}</FormHelperText>\n      )}\n    </FormControl>\n  )\n\n  let renderedElement = element\n  if (tooltip) {\n    renderedElement = (\n      <Tooltip arrow title={tooltip} aria-label={tooltip}>\n        {renderedElement}\n      </Tooltip>\n    )\n  }\n\n  return renderedElement\n}\n\nexport default SelectInput\n","import React from 'react'\nimport { Grid, Button, makeStyles } from '@material-ui/core'\nimport { CSVLink } from 'react-csv'\n\nimport { genderOptions, recommendationOptions } from '../../util/options'\nimport Progress from './Progress'\nimport TextInput from './TextInput'\nimport DateInput from './DateInput'\nimport PhoneInput from './PhoneInput'\nimport SelectInput from './SelectInput'\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    marginBottom: theme.spacing(3)\n  },\n  noneDisplay: {\n    display: 'none'\n  }\n}))\n\nfunction Index ({\n  onSubmit,\n  register,\n  errors,\n  control,\n  setValue,\n  progress,\n  handleDateError,\n  handlePhoneNo,\n  values: { recommendation, dob, phone, gender },\n  download,\n  csvLinkRef\n}) {\n  const classes = useStyles()\n  return (\n    <>\n      <Progress progress={progress} />\n      <form onSubmit={onSubmit}>\n        <Grid container direction='column'>\n          <TextInput\n            id='1'\n            name='fname'\n            label='First Name'\n            register={register}\n            error={errors.fname}\n            className={classes.margin}\n          />\n\n          <TextInput\n            id='2'\n            name='lname'\n            label='Last Name'\n            register={register}\n            error={errors.lname}\n            className={classes.margin}\n          />\n\n          <DateInput\n            id='3'\n            value={dob}\n            className={classes.margin}\n            setValue={setValue}\n            handleError={handleDateError}\n            control={control}\n          />\n\n          <TextInput\n            id='4'\n            name='email'\n            label='Email'\n            register={register}\n            error={errors.email}\n            className={classes.margin}\n            tooltip='The customers primary contact email address'\n          />\n\n          <TextInput\n            id='5'\n            name='address'\n            label='Address'\n            register={register}\n            error={errors.address}\n            className={classes.margin}\n            tooltip='The customers current residential address'\n          />\n\n          <PhoneInput\n            id=\"6\"\n            className={classes.margin}\n            label='Contact Number'\n            value={phone}\n            control={control}\n            error={errors.phone}\n            onChange={handlePhoneNo}\n          />\n\n          <SelectInput\n            id='7'\n            name='gender'\n            className={classes.margin}\n            label='Gender'\n            error={errors.gender}\n            control={control}\n            options={genderOptions}\n            value={gender}\n          />\n\n          <SelectInput\n            id='8'\n            name='recommendation'\n            className={classes.margin}\n            label='Areas of Recommendation'\n            error={errors.recommendation}\n            control={control}\n            options={recommendationOptions}\n            multiple\n            value={recommendation}\n            tooltip=\"Select all of the areas that you are providing a recommendation for\"\n          />\n\n          <Button\n            id=\"submit\"\n            type='submit'\n            size='medium'\n            color='primary'\n            variant='contained'\n            disabled={progress !== 100}\n          >\n            Submit\n          </Button>\n\n          {download && (\n            <CSVLink\n              data={download}\n              target='_blank'\n              filename='submission.csv'\n              separator=','\n              ref={csvLinkRef}\n              className={classes.noneDisplay}\n            >\n              Submit\n            </CSVLink>\n          )}\n        </Grid>\n      </form>\n    </>\n  )\n}\n\nexport default Index\n","import * as yup from \"yup\";\n\nconst schema = yup.object().shape({\n  fname: yup.string().required('First Name is Required'),\n  lname: yup.string().required('Last Name is Required'),\n  dob: yup.date().max(new Date(), 'Date can not be on Future'),\n  email: yup.string().email('Invalid Email Address').required('Email is Required'),\n  address: yup.string().required('Address is Required'),\n  phone: yup.string().required('Contact Number is Required'),\n  gender: yup.string().required('Gender is Required'),\n  recommendation: yup.array().of(yup.string()).min(1, 'Area of Recommendation is Required')\n});\n\nexport default schema;","import React, { useRef } from 'react'\nimport FormComponent from '../components/Form'\nimport { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers'\nimport validationSchema from '../util/schema/formSchema'\nimport { isValidNumber } from 'libphonenumber-js'\nimport moment from 'moment'\n\nfunction Form () {\n  const defaultValues = {\n    fname: '',\n    lname: '',\n    dob: null,\n    email: '',\n    address: '',\n    phone: '',\n    gender: '',\n    recommendation: []\n  }\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors,\n    control,\n    reset,\n    setValue,\n    setError,\n    clearErrors\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(validationSchema),\n    defaultValues\n  })\n  const [download, setDownload] = React.useState(false);\n  const csvLinkRef = useRef(null)\n\n  const getProgress = values => {\n    const keys = Object.keys(values)\n    let completed = 0\n    let total = keys.length\n\n    for (let i in keys) {\n      const key = keys[i]\n      const isItCompleted =\n        values[key] && typeof values[key] === 'object'\n          ? !!Object.keys(values[key]).length\n          : !!values[key]\n      const error = !errors[key]\n      completed += isItCompleted && error\n    }\n\n    return Math.ceil((completed * 100.0) / total)\n  }\n\n  const onSubmit = data => {\n    const modifiedData = { ...data }\n    modifiedData.dob = moment(modifiedData.dob).format(\"YYYY-MM-DD\")\n    setDownload([modifiedData])\n\n    setTimeout(() => {\n      csvLinkRef.current.link.click();\n      setDownload(false)\n    })\n    reset(defaultValues)\n  }\n\n  const values = watch()\n  const progress = getProgress(values)\n\n  const handlePhoneNo = phone => {\n    setValue('phone', phone)\n    if (!isValidNumber(phone)) {\n      if (!errors.phone)\n        setError('phone', { type: 'manual', message: 'Invalid Phone Number' })\n    } else {\n      if (errors.phone) clearErrors('phone')\n    }\n  }\n\n  const handleDateError = err => {\n    if (!!err) {\n      if (!errors.dob) setError('dob', { type: 'manual', message: err })\n    } else {\n      if (errors.dob) clearErrors('dob')\n    }\n  }\n\n  return (\n    <FormComponent\n      onSubmit={handleSubmit(onSubmit)}\n      register={register}\n      errors={errors}\n      control={control}\n      values={values}\n      setValue={setValue}\n      progress={progress}\n      setError={setError}\n      clearErrors={clearErrors}\n      handlePhoneNo={handlePhoneNo}\n      handleDateError={handleDateError}\n      download={download}\n      csvLinkRef={csvLinkRef}\n    />\n  )\n}\n\nexport default Form\n","import { createMuiTheme  } from '@material-ui/core';\n\nexport default createMuiTheme({\n  palette: {\n    type: 'light',\n  },\n})","import React from 'react'\nimport { AppBar, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  padding: {\n    padding: theme.spacing(1)\n  }\n}))\n\nfunction Header () {\n  const classes = useStyles()\n  return (\n    <div>\n      <AppBar position='static' className={classes.padding}>\n        <Typography variant='h6'>NOD</Typography>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react';\nimport Form from './hooks/Form'\nimport { Container, makeStyles, ThemeProvider } from '@material-ui/core'\nimport theme from './util/theme'\nimport Header from './components/Header/Header';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(8),\n  }\n}))\n\nfunction App() {\n  const classes = useStyles()\n  return (\n    <ThemeProvider theme={theme}>\n      <Header />\n      <Container maxWidth=\"md\" className={classes.container}>\n        <Form />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <CssBaseline />\n      <App />\n    </>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}